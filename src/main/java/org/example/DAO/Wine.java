package org.example.DAO;

import java.util.Objects;

/**
 * –ö–ª–∞—Å—Å, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—â–∏–π –≤–∏–Ω–æ —Å –µ–≥–æ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞–º–∏.
 * –°–æ–¥–µ—Ä–∂–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞–∑–≤–∞–Ω–∏–∏, —Ç–∏–ø–µ, –≤–∫—É—Å–æ–≤—ã—Ö –∫–∞—á–µ—Å—Ç–≤–∞—Ö,
 * —Ä–µ–≥–∏–æ–Ω–µ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞ –∏ –¥—Ä—É–≥–∏—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–∞—Ö –≤–∏–Ω–∞.
 */
public class Wine {

    private int id;
    private String name;
    private WineType type;
    private int tannins;
    private int acidity;
    private String region;
    private int vintage;
    private String description;

    public Wine() {

    }

    /**
     * –ü–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏–µ –≤–æ–∑–º–æ–∂–Ω—ã—Ö —Ç–∏–ø–æ–≤ –≤–∏–Ω
     */
    public enum WineType {
        –ö—Ä–∞—Å–Ω–æ–µ, –ë–µ–ª–æ–µ, –†–æ–∑–æ–≤–æ–µ, –î–µ—Å–µ—Ä—Ç–Ω–æ–µ
    }

    /**
     * –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä —Å –º–∏–Ω–∏–º–∞–ª—å–Ω–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
     * @param name –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∏–Ω–∞
     * @param type —Ç–∏–ø –≤–∏–Ω–∞
     * @param tannins —É—Ä–æ–≤–µ–Ω—å —Ç–∞–Ω–∏–Ω–æ–≤ (1-5)
     * @param acidity —É—Ä–æ–≤–µ–Ω—å –∫–∏—Å–ª–æ—Ç–Ω–æ—Å—Ç–∏ (1-5)
     * @throws IllegalArgumentException –µ—Å–ª–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è–º
     */
    public Wine(String name, WineType type, int tannins, int acidity) {
        this.name = name;
        this.type = type;
        setTannins(tannins);
        setAcidity(acidity);
    }

    // –ì–µ—Ç—Ç–µ—Ä—ã –∏ —Å–µ—Ç—Ç–µ—Ä—ã —Å –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π

    /**
     * @return —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –≤–∏–Ω–∞
     */
    public int getId() {
        return id;
    }

    /**
     * –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –≤–∏–Ω–∞
     * @param id –Ω–æ–≤—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä
     */
    public void setId(int id) {
        this.id = id;
    }

    /**
     * @return –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∏–Ω–∞
     */
    public String getName() {
        return name;
    }

    /**
     * –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∏–Ω–∞
     * @param name –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ
     * @throws IllegalArgumentException –µ—Å–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—É—Å—Ç–æ–µ
     */
    public void setName(String name) {
        if (name == null || name.trim().isEmpty()) {
            throw new IllegalArgumentException("–ù–∞–∑–≤–∞–Ω–∏–µ –≤–∏–Ω–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º");
        }
        this.name = name;
    }

    /**
     * @return —Ç–∏–ø –≤–∏–Ω–∞
     */
    public WineType getType() {
        return type;
    }

    /**
     * –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ç–∏–ø –≤–∏–Ω–∞
     * @param type –Ω–æ–≤—ã–π —Ç–∏–ø
     * @throws NullPointerException –µ—Å–ª–∏ —Ç–∏–ø null
     */
    public void setType(WineType type) {
        this.type = Objects.requireNonNull(type, "–¢–∏–ø –≤–∏–Ω–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å null");
    }

    /**
     * @return —É—Ä–æ–≤–µ–Ω—å —Ç–∞–Ω–∏–Ω–æ–≤ (1-5)
     */
    public int getTannins() {
        return tannins;
    }

    /**
     * –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —É—Ä–æ–≤–µ–Ω—å —Ç–∞–Ω–∏–Ω–æ–≤
     * @param tannins –∑–Ω–∞—á–µ–Ω–∏–µ –æ—Ç 1 –¥–æ 5
     * @throws IllegalArgumentException –µ—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –≤–Ω–µ –¥–∏–∞–ø–∞–∑–æ–Ω–∞
     */
    public void setTannins(int tannins) {
        if (tannins < 1 || tannins > 5) {
            throw new IllegalArgumentException("–£—Ä–æ–≤–µ–Ω—å —Ç–∞–Ω–∏–Ω–æ–≤ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –º–µ–∂–¥—É 1 –∏ 5");
        }
        this.tannins = tannins;
    }

    /**
     * @return —É—Ä–æ–≤–µ–Ω—å –∫–∏—Å–ª–æ—Ç–Ω–æ—Å—Ç–∏ (1-5)
     */
    public int getAcidity() {
        return acidity;
    }

    /**
     * –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —É—Ä–æ–≤–µ–Ω—å –∫–∏—Å–ª–æ—Ç–Ω–æ—Å—Ç–∏
     * @param acidity –∑–Ω–∞—á–µ–Ω–∏–µ –æ—Ç 1 –¥–æ 5
     * @throws IllegalArgumentException –µ—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –≤–Ω–µ –¥–∏–∞–ø–∞–∑–æ–Ω–∞
     */
    public void setAcidity(int acidity) {
        if (acidity < 1 || acidity > 5) {
            throw new IllegalArgumentException("–£—Ä–æ–≤–µ–Ω—å –∫–∏—Å–ª–æ—Ç–Ω–æ—Å—Ç–∏ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –º–µ–∂–¥—É 1 –∏ 5");
        }
        this.acidity = acidity;
    }

    /**
     * @return —Ä–µ–≥–∏–æ–Ω –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞ –≤–∏–Ω–∞
     */
    public String getRegion() {
        return region;
    }

    /**
     * –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ä–µ–≥–∏–æ–Ω –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞
     * @param region –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–µ–≥–∏–æ–Ω–∞
     */
    public void setRegion(String region) {
        this.region = region;
    }

    /**
     * @return –≥–æ–¥ —É—Ä–æ–∂–∞—è –≤–∏–Ω–æ–≥—Ä–∞–¥–∞
     */
    public int getVintage() {
        return vintage;
    }

    /**
     * –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –≥–æ–¥ —É—Ä–æ–∂–∞—è
     * @param vintage –≥–æ–¥ (1900-—Ç–µ–∫—É—â–∏–π –≥–æ–¥)
     * @throws IllegalArgumentException –µ—Å–ª–∏ –≥–æ–¥ –≤–Ω–µ –¥–æ–ø—É—Å—Ç–∏–º–æ–≥–æ –¥–∏–∞–ø–∞–∑–æ–Ω–∞
     */
    public void setVintage(int vintage) {
        if (vintage < 1900 || vintage > java.time.Year.now().getValue()) {
            throw new IllegalArgumentException("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≥–æ–¥ —É—Ä–æ–∂–∞—è");
        }
        this.vintage = vintage;
    }

    /**
     * @return –æ–ø–∏—Å–∞–Ω–∏–µ –≤–∫—É—Å–æ–≤—ã—Ö —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫
     */
    public String getDescription() {
        return description;
    }

    /**
     * –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –æ–ø–∏—Å–∞–Ω–∏–µ –≤–∏–Ω–∞
     * @param description —Ç–µ–∫—Å—Ç –æ–ø–∏—Å–∞–Ω–∏—è
     */
    public void setDescription(String description) {
        this.description = description;
    }

    // –ú–µ—Ç–æ–¥—ã –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫

    /**
     * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –≤–∏–Ω–æ –ø–æ–ª–Ω–æ—Ç–µ–ª—ã–º
     * @return true –µ—Å–ª–∏ —É—Ä–æ–≤–µ–Ω—å —Ç–∞–Ω–∏–Ω–æ–≤ 4 –∏–ª–∏ 5
     */
    public boolean isFullBodied() {
        return tannins >= 4;
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –≤–∏–Ω–æ –≤—ã—Å–æ–∫–æ–∫–∏—Å–ª–æ—Ç–Ω—ã–º
     * @return true –µ—Å–ª–∏ —É—Ä–æ–≤–µ–Ω—å –∫–∏—Å–ª–æ—Ç–Ω–æ—Å—Ç–∏ 4 –∏–ª–∏ 5
     */
    public boolean isHighAcidity() {
        return acidity >= 4;
    }

    /**
     * –°—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç –≤–∏–Ω–∞ –ø–æ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—É, –Ω–∞–∑–≤–∞–Ω–∏—é –∏ —Ç–∏–ø—É
     * @param o –æ–±—ä–µ–∫—Ç –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
     * @return true –µ—Å–ª–∏ –≤–∏–Ω–∞ –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ
     */
    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        Wine wine = (Wine) o;
        return id == wine.id &&
                Objects.equals(name, wine.name) &&
                type == wine.type;
    }

    /**
     * @return —Ö—ç—à-–∫–æ–¥ –Ω–∞ –æ—Å–Ω–æ–≤–µ id, –Ω–∞–∑–≤–∞–Ω–∏—è –∏ —Ç–∏–ø–∞
     */
    @Override
    public int hashCode() {
        return Objects.hash(id, name, type);
    }

    /**
     * @return —Å—Ç—Ä–æ–∫–æ–≤–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –≤–∏–Ω–∞ —Å –æ—Å–Ω–æ–≤–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
     */
    @Override
    public String toString() {
        return String.format(
                "*%s* (%s, %d)\n\n" +
                        "üîπ *–†–µ–≥–∏–æ–Ω:* %s\n" +
                        "üîπ *–¢–∞–Ω–∏–Ω—ã:* %d/5\n" +
                        "üîπ *–ö–∏—Å–ª–æ—Ç–Ω–æ—Å—Ç—å:* %d/5\n\n" +
                        "%s\n"+
                        "------------",
                name, type, vintage,
                region != null ? region : "–Ω–µ —É–∫–∞–∑–∞–Ω",
                tannins, acidity,
                description != null ? description : "–û–ø–∏—Å–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
        );
    }
}